{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 3,
    "pending": 3,
    "failures": 0,
    "start": "2023-12-12T21:39:46.843Z",
    "end": "2023-12-12T21:39:47.892Z",
    "duration": 1049,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 50,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9da25330-bbbf-45f8-96ca-2861006cef65",
      "title": "",
      "fullFile": "/Users/serj/Desktop/JS_Playwright_Tests/api_requests/usage_axios.js",
      "file": "/api_requests/usage_axios.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
          "title": "Actions for users on dummyjson website",
          "fullFile": "/Users/serj/Desktop/JS_Playwright_Tests/api_requests/usage_axios.js",
          "file": "/api_requests/usage_axios.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create User",
              "fullTitle": "Actions for users on dummyjson website Create User",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "716a494b-319a-4a95-8e4a-591922c84026",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Product",
              "fullTitle": "Actions for users on dummyjson website Create Product",
              "timedOut": false,
              "duration": 655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createProduct = await axios.post(`${data.baseUrl}/products/add`,\n{\n    'title': 'BMW3 Pencil',\n},\n{\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${data.token}`,\n    } \n})\nconsole.log(createProduct.data)\nexpect(createProduct.status).equal(200)",
              "err": {},
              "uuid": "a51d8ffe-b883-45c1-aeb0-e09c368c524d",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get user by search params",
              "fullTitle": "Actions for users on dummyjson website get user by search params",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const params = new URLSearchParams ([['key', 'hair.color'], ['value','Brown']])\nconst params = { key: 'hair.color', value: 'Brown'}\nconst getUserByParams = await axios.get(`${data.baseUrl}/users/filter`, { params })\nexpect(getUserByParams.status).equal(200)\n// Additional assertions on response data\nexpect(getUserByParams.data).to.have.property('users').that.is.an('array');\nexpect(getUserByParams.data.users[2]).to.have.property('id');\nexpect(getUserByParams.data.users[2]).to.have.property('firstName');\nexpect(getUserByParams.data.users[2]).to.have.property('lastName');\n// console.log(getUserByParams.data)\nuserName = getUserByParams.data.users[2].firstName\nuserId = getUserByParams.data.users[2].id\nuserLastName = getUserByParams.data.users[2].lastName\n// console.log(userName) //Arely\n// console.log(userId)  //18",
              "err": {},
              "uuid": "1b5d74e2-0651-43d5-8410-1c9e5bd00232",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get user by Id and compare value",
              "fullTitle": "Actions for users on dummyjson website get user by Id and compare value",
              "timedOut": false,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUser = await axios.get(`${data.baseUrl}/users/${userId}`) \n// console.log(getUser.data)\nexpect(userName).equal(getUser.data.firstName)\nexpect(userLastName).equal(getUser.data.lastName)",
              "err": {},
              "uuid": "6b6c98df-a2a2-47f1-9c60-3bbe5cbc9cbd",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Created User",
              "fullTitle": "Actions for users on dummyjson website Update Created User",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f8aea081-9856-452f-a918-42c0c5f076ac",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Created User",
              "fullTitle": "Actions for users on dummyjson website Update Created User",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "0a3c3630-9158-4b38-b753-dc7402994bfe",
              "parentUUID": "eb814f51-2ceb-4def-9fb5-11c64aa1f1c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a51d8ffe-b883-45c1-aeb0-e09c368c524d",
            "1b5d74e2-0651-43d5-8410-1c9e5bd00232",
            "6b6c98df-a2a2-47f1-9c60-3bbe5cbc9cbd"
          ],
          "failures": [],
          "pending": [
            "716a494b-319a-4a95-8e4a-591922c84026",
            "f8aea081-9856-452f-a918-42c0c5f076ac",
            "0a3c3630-9158-4b38-b753-dc7402994bfe"
          ],
          "skipped": [],
          "duration": 1042,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "html_reports",
        "": true
      },
      "version": "6.2.0"
    }
  }
}